# ''' Множества - как список. не упорядочная колекция, не содержат повторяющихся элементов 
# ''' не поддержываает индексирование # set {}  

s = {'apple', 'orange', 'peare', 'apple', 'peare', 'bannan'}  # отображаться будут только уникальные элементы и в хаотическом порядке 
s2 = set('hello') # способ создать множество {'e', 'l', 'o', 'h'}
s3 = {i for i in range(1, 11)}
s4 = {5, 3, 2, 1, 9, 2} # цыфры во множествах питон выстраивает по позврастанию {1, 2, 3, 5, 9}
s5 = {} # создание словаря <class 'dict'>
s6 = set() # пустое множество 

print (s)
print(s2) 
print (s3)
print (s4)
print (type(s6))

nums = [1,2,3,4,5,6,4,3,2,2]
nums2 = list(set(nums)) # переводим nums в множество и еомандой  list упорядычеваем 
print (nums2) 

a = set('abracadabra') #{'b', 'c', 'd', 'r', 'a'}
b = set('alacazam')     #{'m', 'c', 'a', 'z', 'l'}

c = a - b # вычисление - убираем из а все букви, еоторые есть в b   {'b', 'r', 'd'}
d = a | b # обединение - буквы или в а или в b                      {'r', 'z', 'd', 'm', 'l', 'b', 'c', 'a'}
e = a & b # пересечения - буквы и в а и в b                         {'c', 'a'}
f = a ^ b # множество из элеменов - буквы в а или в b, но не в обоих 

print(a, b, c, d, e, f, sep='\n') # напечатай 2 множества  и раздели их переносом на следующую строку